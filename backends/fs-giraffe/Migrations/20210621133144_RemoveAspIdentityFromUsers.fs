// <auto-generated />
namespace Trendy.Migrations

open System
open Microsoft.EntityFrameworkCore
open Microsoft.EntityFrameworkCore.Infrastructure
open Microsoft.EntityFrameworkCore.Metadata
open Microsoft.EntityFrameworkCore.Migrations
open Microsoft.EntityFrameworkCore.Storage.ValueConversion
open Trendy.Contexts

[<DbContext(typeof<LinksContext.LinksContext>)>]
[<Migration("20210621133144_RemoveAspIdentityFromUsers")>]
type RemoveAspIdentityFromUsers() =
    inherit Migration()

    override this.Up(migrationBuilder:MigrationBuilder) =
        migrationBuilder.DropColumn(
            name = "AccessFailedCount"
            ,table = "Users"
            ) |> ignore

        migrationBuilder.DropColumn(
            name = "ConcurrencyStamp"
            ,table = "Users"
            ) |> ignore

        migrationBuilder.DropColumn(
            name = "EmailConfirmed"
            ,table = "Users"
            ) |> ignore

        migrationBuilder.DropColumn(
            name = "LockoutEnabled"
            ,table = "Users"
            ) |> ignore

        migrationBuilder.DropColumn(
            name = "LockoutEnd"
            ,table = "Users"
            ) |> ignore

        migrationBuilder.DropColumn(
            name = "NormalizedEmail"
            ,table = "Users"
            ) |> ignore

        migrationBuilder.DropColumn(
            name = "NormalizedUserName"
            ,table = "Users"
            ) |> ignore

        migrationBuilder.DropColumn(
            name = "PasswordHash"
            ,table = "Users"
            ) |> ignore

        migrationBuilder.DropColumn(
            name = "PhoneNumber"
            ,table = "Users"
            ) |> ignore

        migrationBuilder.DropColumn(
            name = "PhoneNumberConfirmed"
            ,table = "Users"
            ) |> ignore

        migrationBuilder.DropColumn(
            name = "SecurityStamp"
            ,table = "Users"
            ) |> ignore

        migrationBuilder.DropColumn(
            name = "TwoFactorEnabled"
            ,table = "Users"
            ) |> ignore

        migrationBuilder.DropColumn(
            name = "UserName"
            ,table = "Users"
            ) |> ignore

        migrationBuilder.AlterColumn<string>(
            name = "Email"
            ,table = "Users"
            ,``type`` = "TEXT"
            ,nullable = false
            ,defaultValue = ""
            ,oldClrType = typedefof<string>
            ,oldType = "TEXT"
            ,oldNullable = true
            ) |> ignore

        migrationBuilder.AddColumn<string>(
            name = "EncryptedPassword"
            ,table = "Users"
            ,``type`` = "TEXT"
            ,nullable = false
            ,defaultValue = ""
            ) |> ignore

        migrationBuilder.AddColumn<string>(
            name = "Name"
            ,table = "Users"
            ,``type`` = "TEXT"
            ,nullable = false
            ,defaultValue = ""
            ) |> ignore

        migrationBuilder.CreateIndex(
            name = "IX_Users_Email"
            ,table = "Users"
            ,column = "Email"
            ,unique = true
            ) |> ignore


    override this.Down(migrationBuilder:MigrationBuilder) =
        migrationBuilder.DropIndex(
            name = "IX_Users_Email"
            ,table = "Users"
            ) |> ignore

        migrationBuilder.DropColumn(
            name = "EncryptedPassword"
            ,table = "Users"
            ) |> ignore

        migrationBuilder.DropColumn(
            name = "Name"
            ,table = "Users"
            ) |> ignore

        migrationBuilder.AlterColumn<string>(
            name = "Email"
            ,table = "Users"
            ,``type`` = "TEXT"
            ,nullable = true
            ,oldClrType = typedefof<string>
            ,oldType = "TEXT"
            ,oldNullable = false
            ) |> ignore

        migrationBuilder.AddColumn<int>(
            name = "AccessFailedCount"
            ,table = "Users"
            ,``type`` = "INTEGER"
            ,nullable = false
            ,defaultValue = 0
            ) |> ignore

        migrationBuilder.AddColumn<string>(
            name = "ConcurrencyStamp"
            ,table = "Users"
            ,``type`` = "TEXT"
            ,nullable = true
            ) |> ignore

        migrationBuilder.AddColumn<bool>(
            name = "EmailConfirmed"
            ,table = "Users"
            ,``type`` = "INTEGER"
            ,nullable = false
            ,defaultValue = false
            ) |> ignore

        migrationBuilder.AddColumn<bool>(
            name = "LockoutEnabled"
            ,table = "Users"
            ,``type`` = "INTEGER"
            ,nullable = false
            ,defaultValue = false
            ) |> ignore

        migrationBuilder.AddColumn<DateTimeOffset>(
            name = "LockoutEnd"
            ,table = "Users"
            ,``type`` = "TEXT"
            ,nullable = true
            ) |> ignore

        migrationBuilder.AddColumn<string>(
            name = "NormalizedEmail"
            ,table = "Users"
            ,``type`` = "TEXT"
            ,nullable = true
            ) |> ignore

        migrationBuilder.AddColumn<string>(
            name = "NormalizedUserName"
            ,table = "Users"
            ,``type`` = "TEXT"
            ,nullable = true
            ) |> ignore

        migrationBuilder.AddColumn<string>(
            name = "PasswordHash"
            ,table = "Users"
            ,``type`` = "TEXT"
            ,nullable = true
            ) |> ignore

        migrationBuilder.AddColumn<string>(
            name = "PhoneNumber"
            ,table = "Users"
            ,``type`` = "TEXT"
            ,nullable = true
            ) |> ignore

        migrationBuilder.AddColumn<bool>(
            name = "PhoneNumberConfirmed"
            ,table = "Users"
            ,``type`` = "INTEGER"
            ,nullable = false
            ,defaultValue = false
            ) |> ignore

        migrationBuilder.AddColumn<string>(
            name = "SecurityStamp"
            ,table = "Users"
            ,``type`` = "TEXT"
            ,nullable = true
            ) |> ignore

        migrationBuilder.AddColumn<bool>(
            name = "TwoFactorEnabled"
            ,table = "Users"
            ,``type`` = "INTEGER"
            ,nullable = false
            ,defaultValue = false
            ) |> ignore

        migrationBuilder.AddColumn<string>(
            name = "UserName"
            ,table = "Users"
            ,``type`` = "TEXT"
            ,nullable = true
            ) |> ignore


    override this.BuildTargetModel(modelBuilder: ModelBuilder) =
        modelBuilder
            .HasAnnotation("ProductVersion", "5.0.7")
            |> ignore

        modelBuilder.Entity("Trendy.Models.DatabaseTypes+Link", (fun b ->

            b.Property<int>("Id")
                .ValueGeneratedOnAdd()
                .HasColumnType("INTEGER") |> ignore
            b.Property<string>("Notes")
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("Url")
                .IsRequired()
                .HasColumnType("TEXT") |> ignore
            b.Property<int>("UserId")
                .IsRequired()
                .HasColumnType("INTEGER") |> ignore

            b.HasKey("Id") |> ignore


            b.HasIndex("UserId") |> ignore

            b.ToTable("Links") |> ignore

        )) |> ignore

        modelBuilder.Entity("Trendy.Models.DatabaseTypes+User", (fun b ->

            b.Property<int>("Id")
                .ValueGeneratedOnAdd()
                .HasColumnType("INTEGER") |> ignore
            b.Property<string>("Email")
                .IsRequired()
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("EncryptedPassword")
                .IsRequired()
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("Name")
                .IsRequired()
                .HasColumnType("TEXT") |> ignore

            b.HasKey("Id") |> ignore


            b.HasIndex("Email")
                .IsUnique() |> ignore

            b.ToTable("Users") |> ignore

        )) |> ignore

        modelBuilder.Entity("Trendy.Models.DatabaseTypes+Link", (fun b ->
            b.HasOne("Trendy.Models.DatabaseTypes+User","User")
                .WithMany("Links")
                .HasForeignKey("UserId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired() |> ignore
        )) |> ignore

